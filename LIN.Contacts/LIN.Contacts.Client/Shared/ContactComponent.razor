@inject IJSRuntime JSRuntime;
@inject NavigationManager nav;

@code
{
    [Parameter]
    public ContactModel Modelo { get; set; }


    [Parameter]
    public EventCallback<MouseEventArgs> OnDelete { get; set; }


    string Message = "";

    private string state = "";


    void Mail()
    {
        JSRuntime.InvokeVoidAsync("enviarCorreo", Modelo.Mails[0].Email);
    }
    

}



<AskDeleteAccount Message="@("¿Seguro desea eliminar el proyecto '"+Modelo.Nombre+"'?")" Key="@Modelo.Id.ToString()" OnYes="Delete" />





<div @onclick="GotoProj" class="flex items-center justify-between bg-[#f2f1f6] rounded-lg p-3 mb-2 dark:bg-zinc-900">
    <div class="flex items-center">
        <div class="bg-zinc-200 dark:bg-zinc-700 dark:text-zinc-300 rounded-full uppercase text-xs font-semibold text-gray-700 w-8 h-8 flex items-center justify-center mr-3">@GetInitial(Modelo.Nombre)</div>
        <p class="font-semibold dark:text-zinc-300">@Modelo.Nombre</p>
    </div>

    <div class="flex gap-2 items-center justify-center">
       
        <button class="text-green-500 bg-green-500/15 hover:text-green-600 hover:bg-green/20  rounded-full p-2">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-telephone-fill" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M1.885.511a1.745 1.745 0 0 1 2.61.163L6.29 2.98c.329.423.445.974.315 1.494l-.547 2.19a.68.68 0 0 0 .178.643l2.457 2.457a.68.68 0 0 0 .644.178l2.189-.547a1.75 1.75 0 0 1 1.494.315l2.306 1.794c.829.645.905 1.87.163 2.611l-1.034 1.034c-.74.74-1.846 1.065-2.877.702a18.6 18.6 0 0 1-7.01-4.42 18.6 18.6 0 0 1-4.42-7.009c-.362-1.03-.037-2.137.703-2.877z" />
            </svg>
        </button>

        <button @onclick="Mail" class="text-blue-500 bg-blue-500/15 hover:text-blue-600 hover:bg-blue/20 rounded-full p-2">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 512 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d="M48 64C21.5 64 0 85.5 0 112c0 15.1 7.1 29.3 19.2 38.4L236.8 313.6c11.4 8.5 27 8.5 38.4 0L492.8 150.4c12.1-9.1 19.2-23.3 19.2-38.4c0-26.5-21.5-48-48-48H48zM0 176V384c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V176L294.4 339.2c-22.8 17.1-54 17.1-76.8 0L0 176z" /></svg>
           
        </button>


        <button class="flex items-center justify-center text-indigo-500 bg-indigo-500/15 hover:text-indigo-600 hover:bg-indigo/20 rounded-full p-2">

            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 512 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d="M64 0C28.7 0 0 28.7 0 64V352c0 35.3 28.7 64 64 64h96v80c0 6.1 3.4 11.6 8.8 14.3s11.9 2.1 16.8-1.5L309.3 416H448c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64H64z" /></svg>
        </button>

    </div>

    
</div>






























@code
{

    async void DeleteAsk()
    {

        //await JSRuntime.InvokeVoidAsync("ShowModal", $"ask-delete-modal-{Modelo.Id}", $"ask-close-btn-{Modelo.Id}", $"ask-close-btn2-{Modelo.Id}", $"ask-close-btn3-{Modelo.Id}");

    }

    async void Delete()
    {
        // var response  =  await  LIN.Access.Contacts.Controllers.Contacts.Delete(Modelo.Id, LIN.Access.Contacts.Session.Instance.Token);

        // if (response.Response == Responses.Success)
        // {
        //     Pages.Index.AreProjectLoaded = false;
        //     Online.StaticHub.NotificateAccount("cl.UpdateProjects()");
        //     await OnDelete.InvokeAsync();
        // }
        // else
        // {
        //    // ModalError.Show($"No se pudo eliminar el proyecto '{Modelo.Nombre}'");
        // }

    }


    void GotoProj()
    {
        Pages.Index.ModalContactos.Modelo = Modelo;
        Pages.Index.ModalContactos.Show();
    }


    string GetInitial(string name)
    {

        name = name.Trim();
        string init = "";

        while (name.Contains("  "))
            name = name.Replace("  ", " ");

        var split = name.Split(" ");

        if (split.Length == 1 && split[0].Length>0)
        {
            init = split[0][0].ToString();
            return init.ToUpper();
        }

        else if (split.Length >= 2 && split[0].Length > 0 && split[1].Length > 0)
        {
            init = split[0][0].ToString();
            init += split[1][0].ToString();
            return init.ToUpper();
        }

        return "?";

    }


}
