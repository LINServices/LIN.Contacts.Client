@page "/"

<!-- Dependencias -->
@inject IJSRuntime JSRuntime
@inject NavigationManager nav
@rendermode InteractiveWebAssembly

@* No hay sesión activa *@
@if (!Access.Contacts.Session.IsOpen)
{
    <div class="flex h-screen w-full items-center justify-center">
        <CircleLoader />
    </div>

    Task.Run(async () =>
    {
        nav.NavigateTo("/login");
    });
    return;
}

@{
    Me = this;
}


<div class="flex w-full justify-center">

    <div class="w-full max-w-4xl">

        @* Cabecera *@
        <div class="p-4">

            @* Entradas *@
            <div class="mt-4 flex items-center">

                @* Input de búsqueda *@
                <div class="bg-[#f2f1f6] flex h-10 flex-grow items-center rounded-full px-4 dark:bg-zinc-900 dark:text-zinc-300">
                    <svg class="mr-2 h-4 w-4 fill-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z" /></svg>
                    <input @oninput="Search" class="w-full bg-transparent focus:outline-none" type="text" placeholder="Buscar contactos, correos o teléfonos">
                </div>


                @* Botones *@
                <div class="ml-4 flex h-full items-center">

                    @* Botón de nuevo *@
                    <button @onclick="OpenCreate" class="bg-green-200/30 mr-2 h-10 w-10 rounded-full p-2.5 text-green-500">
                        <svg class="h-full w-full fill-green-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d="M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32V224H48c-17.7 0-32 14.3-32 32s14.3 32 32 32H192V432c0 17.7 14.3 32 32 32s32-14.3 32-32V288H400c17.7 0 32-14.3 32-32s-14.3-32-32-32H256V80z" /></svg>
                    </button>

                    @* Botón de Emma *@
                    <button @onclick="OpenEmma" class="bg-current-200/30 mr-2 h-10 w-10 rounded-full p-2.5 text-current-500">
                        <svg class="h-full w-full fill-current-500" xmlns="http://www.w3.org/2000/svg" version="1.0" viewBox="0 0 256.000000 256.000000" preserveAspectRatio="xMidYMid meet">
                            <g transform="translate(0.000000,256.000000) scale(0.100000,-0.100000)" stroke="none">
                                <path d="M1160 2550 c-429 -40 -821 -306 -1015 -690 -98 -195 -137 -361 -137 -580 0 -349 126 -656 371 -901 246 -245 552 -371 901 -371 223 0 407 45 595 145 68 36 83 49 103 87 12 24 22 58 22 75 0 54 -40 117 -90 143 -59 30 -102 25 -205 -27 -288 -143 -623 -133 -900 27 -224 130 -387 349 -452 608 -24 95 -24 333 0 428 65 258 227 478 448 605 506 293 1145 71 1362 -471 55 -135 61 -184 62 -441 l0 -239 -33 -29 c-46 -41 -108 -41 -154 0 l-33 29 -6 229 c-5 167 -11 244 -23 288 -102 365 -462 591 -830 521 -388 -75 -646 -452 -572 -838 20 -102 49 -175 105 -260 222 -338 680 -429 1008 -198 l70 49 42 -43 c167 -170 437 -181 608 -23 58 54 99 113 126 185 20 53 21 74 21 312 -1 278 -13 374 -70 532 -153 426 -516 741 -952 827 -119 23 -259 31 -372 21z m292 -918 c79 -38 149 -110 186 -190 24 -50 27 -69 27 -162 0 -93 -3 -112 -27 -162 -37 -80 -107 -152 -187 -191 -61 -30 -72 -32 -171 -32 -93 0 -112 3 -162 27 -80 37 -152 107 -191 187 -30 61 -32 72 -32 171 0 93 3 112 27 162 47 100 137 180 241 214 26 9 76 13 133 11 79 -2 100 -7 156 -35z" />
                            </g>
                        </svg>
                    </button>

                </div>

            </div>


            @* Perfil *@
            <div class="mt-5 flex items-center justify-between">

                <div class="flex items-center">

                    @* Imagen del perfil *@
                    <div class="relative mr-3 inline-flex h-12 w-12 items-center justify-center overflow-hidden rounded-full bg-gray-100 dark:bg-zinc-800">
                        <span class="text-xl font-medium text-gray-600 dark:text-gray-300">@Global.Utilities.Strings.GetInitials(LIN.Access.Contacts.Session.Instance.Account.Name ?? "")</span>
                    </div>

                    @* Nombre y conteo *@
                    <div>
                        <h1 class="text-lg font-semibold dark:text-zinc-300">@Session.Instance.Account.Name</h1>
                        <p class="text-sm text-gray-500 dark:text-zinc-400">@(Contactos.Count()) contactos</p>
                    </div>
                </div>

            </div>


            @* Recomendaciones *@
            <div class="mt-5 flex overflow-x-auto">
                <div class="flex flex-nowrap">

                   <ContactSquareComponent />

                </div>
            </div>

        </div>

        @* Contactos *@
        <div class="px-4">

            @* Cargando *@
            @if (!AreProjectLoaded)
            {
                <div class="flex h-9 w-full items-center justify-center rounded-lg">
                    <CircleLoader />
                </div>
            }

            @* Renderizar contactos *@
            else
            {

                @* Mostrar los contactos *@
                @foreach (var group in RenderList)
                {
                    <div>

                        @* Clave (Letra) *@
                        <div class="mt-2 flex items-center justify-between">
                            <p class="text-sm font-semibold text-gray-800 dark:text-gray-300">@group.Key</p>
                        </div>

                        <div class="mt-2">
                            @foreach (var e in group)
                            {
                                <ContactComponent Modelo="e"></ContactComponent>
                            }
                        </div>
                    </div>
                }
            }

        </div>

    </div>

</div>


@* Emma *@
<EmmaDrawer @ref=EmmaIA />

@* Nuevo *@
<DrawerProject OnSuccessCreate="OnSuccess" />

@* Contacto *@
<ContactModal @ref="ModalContactos" OnEdit="OnEdit" />

<ContactEdit @ref=ContactEditDrawer OnSuccess="()=>InvokeAsync(StateHasChanged)"></ContactEdit>