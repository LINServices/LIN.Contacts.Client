@inject IJSRuntime JSRuntime;
@inject NavigationManager nav;

@code
{
    [Parameter]
    public ContactModel Modelo { get; set; }


    [Parameter]
    public EventCallback<MouseEventArgs> OnDelete { get; set; }

    string Message = "";

    private string state = "";

}



<AskDeleteAccount Message="@("¿Seguro desea eliminar el proyecto '"+Modelo.Nombre+"'?")" Key="@Modelo.Id.ToString()" OnYes="Delete" />



<style>
    .div-shadow {
        box-shadow: rgba(0, 0, 0, 0.05) 0px 6px 24px 0px, rgba(0, 0, 0, 0.08) 0px 0px 0px 1px;
        border-radius: 5px;
        background-color: white;
    }

        .div-shadow:hover {
            box-shadow: rgba(63, 155, 229, 0.2) 0px 6px 24px 0px, rgba(63, 155, 229, 0.2) 0px 0px 0px 1px;
        }

</style>




<div @onclick="GotoProj" style="padding: 15px;" class="horizontal gilroy mt-2 ring-2 hover:ring-pink-500 ring-gray-200 rounded-lg">

    <div class="flex flex-row items-center">


        <div class="relative inline-flex items-center justify-center w-10 h-10 overflow-hidden bg-gray-100 rounded-full dark:bg-gray-600">
            <span class="font-medium text-gray-600 dark:text-gray-300">JL</span>
        </div>


        <div class="flex flex-col ml-2">

            <h1 style="margin-top: -5px" class="gilroy-bold">@Modelo.Nombre</h1>

            @if(Modelo.Mails.Count <= 0 && Modelo.Phones.Count <=0)
            {
                <label class="text-sm -mt-1">Sin datos de contacto</label>
            }
            else if (Modelo.Mails.Count <= 0)
            {
                <label class="text-sm -mt-1">@Modelo.Phones[0].Number</label>
            }
            else
            {
                <label class="text-sm -mt-1">@Modelo.Mails[0].Email</label>
            }

          
        </div>

        <div @onclick:stopPropagation="true" class="ml-auto flex-shrink-0 justify-center items-center mt-1 mr-2">

            <DeleteButton OnPress="DeleteAsk" />

        </div>

       

    </div>

</div>






























@code
{

    async void DeleteAsk()
    {

        await JSRuntime.InvokeVoidAsync("ShowModal", $"ask-delete-modal-{Modelo.Id}", $"ask-close-btn-{Modelo.Id}", $"ask-close-btn2-{Modelo.Id}", $"ask-close-btn3-{Modelo.Id}");

    }

    async void Delete()
    {
        // var response  =  await  LIN.Access.Contacts.Controllers.Contacts.Delete(Modelo.Id, LIN.Access.Contacts.Session.Instance.Token);

        // if (response.Response == Responses.Success)
        // {
        //     Pages.Index.AreProjectLoaded = false;
        //     Online.StaticHub.NotificateAccount("cl.UpdateProjects()");
        //     await OnDelete.InvokeAsync();
        // }
        // else
        // {
        //    // ModalError.Show($"No se pudo eliminar el proyecto '{Modelo.Nombre}'");
        // }

    }


     void GotoProj()
    {
        
    }


}
